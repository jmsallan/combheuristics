% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/LocalSearchFSFunctions.R
\name{TSFS}
\alias{TSFS}
\title{Tabu search heuristic for permutative flowshop}
\usage{
TSFS(
  M,
  inisol,
  iter = 100,
  tabu.size = 5,
  op = "swap",
  asp = TRUE,
  eval = FALSE,
  early = FALSE
)
}
\arguments{
\item{M}{A matrix object storing the time to process task j (column) in machine i (row).}

\item{inisol}{The starting solution.}

\item{iter}{the number of iterations to run (see \code{early} parameter).}

\item{tabu.size}{the length of the tabu list. The tabu list stores the number of tabu moves obtained in the last \code{tabu.size} iterations.}

\item{asp}{if \code{TRUE} implements an aspiration condition: if a tabu move has better makespan than the best solution found so far, it is allowed to be considered as candidate solution.}

\item{eval}{if set to \code{TRUE} returns information about the evolution of the algorithm.}

\item{early}{if set to \code{TRUE}, the algorithm stops if it has not improved the solution after \code{iter} iterations. For \code{early=TRUE} we can set lower values of \code{iter} to reduce time of execution.}
}
\value{
sol The obtained solution.

obj The makespan of the obtained solution.

evalfit (returned if \code{eval=TRUE})  the value of the makespan of the examined solution in each iteration.

evalbest (returned if \code{eval=TRUE}) the value of the best solution obtained in each iteration.
}
\description{
An implementation of a tabu search heuristic for the flowshop.
}
\examples{
set.seed(2020)
instance <- matrix(sample(10:90, 100, replace=TRUE), 5, 20)
TSFS(M=instance, inisol=PalmerTrapezes(instance)$tra, iter=25, op="insertion", early=TRUE)
}
