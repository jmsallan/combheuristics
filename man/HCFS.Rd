% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/LocalSearchFSFunctions.R
\name{HCFS}
\alias{HCFS}
\title{Hill climbing heuristic for permutative flowshop}
\usage{
HCFS(M, inisol, op = "swap")
}
\arguments{
\item{M}{A matrix object storing the time to process task j (column) in machine i (row).}

\item{inisol}{The starting solution.}

\item{op}{The neighbourhood operator. Presently are implemented \code{swap} (the default) and \code{insertion} neighbourhoods.}
}
\value{
sol The obtained solution.

obj The makespan of the obtained solution.
}
\description{
A hill climbing heuristic for pemutative flowshop. In each iteration, it finds the element of the neighbourhood of the present solution with lowest makespan. If the obtained solution improves the existing solution, a new iteration is performed. If not, the algorithm stops.
}
\examples{
set.seed(2020)
instance <- matrix(sample(10:90, 100, replace=TRUE), 5, 20)
HCFS(M=instance, inisol=PalmerTrapezes(instance)$tra, op="insertion")
}
